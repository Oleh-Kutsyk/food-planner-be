name: Changelog

on:
  workflow_run:
    workflows: [ "Release" ]
    types:
      - completed

jobs:
  changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git user
        run: |
          git config user.name "Oleh_Kutsyk"
          git config user.email "oleh.kutsyk@group107.com"

      - name: Get current and previous tags
        id: tags
        run: |
          git fetch --tags
          tags=($(git tag --sort=-creatordate | grep '^v'))

          current_tag=${tags[0]}
          prev_tag=${tags[1]:-}

          echo "current_tag=$current_tag" >> $GITHUB_OUTPUT
          echo "prev_tag=$prev_tag" >> $GITHUB_OUTPUT

      - name: Generate structured changelog entry
        id: changelog
        run: |
          tag=${{ steps.tags.outputs.current_tag }}
          prev=${{ steps.tags.outputs.prev_tag }}
          date=$(date +'%Y-%m-%d')

          if [ -n "$prev" ]; then
            log=$(git log "$prev..$tag" --pretty=format:"%s|%an" --no-merges)
          else
            log=$(git log "$tag" --pretty=format:"%s|%an" --no-merges)
          fi

          echo "## $tag — $date" > new_changelog.md
          echo "" >> new_changelog.md

          echo "$log" | grep -i '^feat' | awk -F'|' '{print "- 🚀 " $1 " (" $2 ")"}' >> feat.md
          echo "$log" | grep -i '^fix'  | awk -F'|' '{print "- 🐛 " $1 " (" $2 ")"}' >> fix.md
          echo "$log" | grep -i '^chore'| awk -F'|' '{print "- 🧼 " $1 " (" $2 ")"}' >> chore.md
          echo "$log" | grep -i '^test' | awk -F'|' '{print "- 🧪 " $1 " (" $2 ")"}' >> test.md
          echo "$log" | grep -i '^docs' | awk -F'|' '{print "- 📚 " $1 " (" $2 ")"}' >> docs.md

          for section in feat fix chore test docs; do
            file="$section.md"
            if [ -s "$file" ]; then
              case $section in
                feat)  echo -e "### 🚀 Features\n" >> new_changelog.md ;;
                fix)   echo -e "### 🐛 Fixes\n" >> new_changelog.md ;;
                chore) echo -e "### 🧼 Chores\n" >> new_changelog.md ;;
                test)  echo -e "### 🧪 Tests\n" >> new_changelog.md ;;
                docs)  echo -e "### 📚 Documentation\n" >> new_changelog.md ;;
              esac
              cat "$file" >> new_changelog.md
              echo "" >> new_changelog.md
              rm "$file"
            fi
          done

      - name: Update CHANGELOG.md
        run: |
          if [ -f CHANGELOG.md ]; then
            cat new_changelog.md CHANGELOG.md > temp.md
            mv temp.md CHANGELOG.md
          else
            mv new_changelog.md CHANGELOG.md
          fi

      - name: Commit updated CHANGELOG.md
        run: |
          git add CHANGELOG.md
          git commit -m "chore: update changelog for ${{ steps.tags.outputs.current_tag }}"
          git push origin HEAD:refs/heads/main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.tags.outputs.current_tag }}
          tag_name: ${{ steps.tags.outputs.current_tag }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
